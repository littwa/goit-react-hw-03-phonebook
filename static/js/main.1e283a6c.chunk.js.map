{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactListItem","el","delCont","className","itemLi","name","number","itemComp","onClick","ContactList","contacts","deleteContact","map","key","id","ContactForm","state","handleSubmit","e","preventDefault","props","addContact","setState","handleChange","target","value","formcont","onSubmit","this","fc","onChange","type","autoComplete","required","maxLength","React","Component","Filter","handleChangeFilter","filter","filterComp","App","find","contact","alert","uuidv4","prevState","persist","contactsForRenderAndFilter","toLowerCase","includes","onId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","contactsArrayFiltered","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e283a6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcont\":\"ContactForm_formcont__1vRhP\",\"fc\":\"ContactForm_fc__uDWTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterComp\":\"Filter_filterComp__2TOFt\"};","import React from \"react\";\r\nimport { itemComp, itemLi } from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet ContactListItem = ({ el, delCont }) => (\r\n  <li className={itemLi}>\r\n    {el.name}: {el.number}\r\n    <button className={itemComp} onClick={delCont}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  el: PropTypes.object.isRequired,\r\n  delCont: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet ContactList = ({ contacts, deleteContact }) => (\r\n  <section>\r\n    <ul>\r\n      {contacts.map((el) => (\r\n        <ContactListItem key={el.id} el={el} delCont={() => deleteContact(el.id)} />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { formcont, fc } from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state.name, this.state.number);\r\n    this.setState(() => {\r\n      return { name: \"\", number: \"\" };\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let { value, name } = e.target;\r\n\r\n    this.setState(() => {\r\n      return { [name]: value };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={formcont} onSubmit={this.handleSubmit}>\r\n        <label className={fc}>\r\n          Name\r\n          <input className={fc} onChange={this.handleChange} value={this.state.name} name=\"name\" type=\"text\" autoComplete=\"off\" required />\r\n        </label>\r\n        <label className={fc}>\r\n          Number\r\n          <input className={fc} onChange={this.handleChange} value={this.state.number} name=\"number\" type=\"tel\" autoComplete=\"off\" maxLength=\"10\" />\r\n        </label>\r\n        <button className={fc}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n//= ({ addContact, handleChange, name, number }) =>\r\n","import React from \"react\";\r\nimport { filterComp } from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet Filter = ({ handleChangeFilter, filter }) => {\r\n  return (\r\n    <section>\r\n      <label>\r\n        Find contacts by name\r\n        <input className={filterComp} onChange={handleChangeFilter} value={filter} name=\"filter\" type=\"text\" autoComplete=\"off\" />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChangeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends Component {\r\n state = {\r\n  contacts: [],\r\n  filter: \"\"\r\n };\r\n\r\n componentDidMount() {\r\n  this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\r\n }\r\n\r\n componentDidUpdate(prevProps, prevState) {\r\n  if (this.state.contacts !== prevState.contacts) {\r\n   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n }\r\n\r\n addContact = (name, number) => {\r\n  if (this.state.contacts.find(contact => name === contact.name)) {\r\n   alert(name + \" is already in contacts\");\r\n   return;\r\n  }\r\n\r\n  const contact = {\r\n   id: uuidv4(),\r\n   name,\r\n   number\r\n  };\r\n\r\n  this.setState(prevState => {\r\n   return {\r\n    contacts: [...prevState.contacts, contact]\r\n   };\r\n  });\r\n };\r\n\r\n handleChangeFilter = e => {\r\n  e.persist();\r\n  // let { value } = e.target;\r\n  this.setState(() => {\r\n   return { filter: e.target.value };\r\n  });\r\n };\r\n\r\n contactsForRenderAndFilter = () => {\r\n  const { contacts, filter } = this.state;\r\n  return contacts.filter(contacts => contacts.name.toLowerCase().includes(filter.toLowerCase()));\r\n };\r\n\r\n deleteContact = onId => {\r\n  this.setState(() => {\r\n   return {\r\n    contacts: this.state.contacts.filter(contact => contact.id !== onId)\r\n   };\r\n  });\r\n };\r\n\r\n render() {\r\n  let contactsArrayFiltered = this.contactsForRenderAndFilter();\r\n\r\n  return (\r\n   <>\r\n    <div>\r\n     <h1>Phonebook</h1>\r\n     <ContactForm addContact={this.addContact} />\r\n     <h2>Contacts</h2>\r\n     {this.state.contacts.length > 1 && (\r\n      <Filter handleChangeFilter={this.handleChangeFilter} filter={this.state.filter} />\r\n     )}\r\n     <ContactList contacts={contactsArrayFiltered} deleteContact={this.deleteContact} />\r\n    </div>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemComp\":\"ContactListItem_itemComp__3vMIR\",\"itemLi\":\"ContactListItem_itemLi__LMwqz\"};"],"sourceRoot":""}